FROM ghcr.io/lambgeo/lambda-gdal:3.6 as gdal

# This example assume that you are creating a lambda package for python 3.10
FROM public.ecr.aws/lambda/python:3.10

# Bring C libs from lambgeo/lambda-gdal image
COPY --from=gdal /opt/lib/ /opt/lib/
COPY --from=gdal /opt/include/ /opt/include/
COPY --from=gdal /opt/share/ /opt/share/
COPY --from=gdal /opt/bin/ /opt/bin/

ENV \
  GDAL_DATA=/opt/share/gdal \
  PROJ_LIB=/opt/share/proj \
  GDAL_CONFIG=/opt/bin/gdal-config \
  GEOS_CONFIG=/opt/bin/geos-config \
  PATH=/opt/bin:$PATH \
  LD_LIBRARY_PATH=/opt/lib:$LD_LIBRARY_PATH

ENV PACKAGE_PREFIX=/var/task

RUN yum install -y gcc-c++ gcc make

# Copy local files
COPY lambda_handler.py ${PACKAGE_PREFIX}/lambda_handler.py

# Copy requirements.txt
COPY requirements.txt ${PACKAGE_PREFIX}

# Install the specified packages
RUN pip install -r requirements.txt -t $PACKAGE_PREFIX

# install package
# This example shows how to install GDAL python bindings for gdal 3.6
# The GDAL version should be the same as the one provided by the `lambgeo/lambda-gdal` image
RUN python -m pip install GDAL==$(gdal-config --version) -t $PACKAGE_PREFIX

COPY . ${PACKAGE_PREFIX}

CMD ["lambda_handler.lambda_handler"]